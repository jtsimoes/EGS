# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: registry.deti:5000/egs-ressellr/frontend:latest # replace with the location of your built image
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
        - name: DB_HOST
          value: frontend-db
        - name: DB_NAME
          value: frontenddb
        - name: DB_USER
          value: frontend
        - name: DB_PASSWORD
          value: password
        - name: DB_PORT
          value: "3306"
      
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---




# Authentication Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication
  labels:
    app: authentication
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
      - name: authentication
        image: registry.deti:5000/egs-ressellr/authentication:latest # replace with the location of your built image
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"

---

# Authentication Service
apiVersion: v1
kind: Service
metadata:
  name: googleauth-app
spec:
  selector:
    app: googleauth-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000


---

# Messages App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messages
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messages
  template:
    metadata:
      labels:
        app: messages
    spec:
      containers:
      - name: messages
        image: registry.deti:5000/egs-ressellr/messages:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: DB_HOST
          value: messages-db
        - name: DB_PORT
          value: '3306'
        - name: DB_USER
          value: 'user'
        - name: DB_PASSWORD
          value: 'password'
        - name: DB_NAME
          value: 'ResellrMessages'

---

# Messages App Service
apiVersion: v1
kind: Service
metadata:
  name: messages
spec:
  type: NodePort
  selector:
    app: messages
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---




# Stock DB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stock
  template:
    metadata:
      labels:
        app: stock
    spec:
      containers:
      - name: app-container
        image: registry.deti:5000/egs-ressellr/messages:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: DB_HOST
          value: "db-service"
        - name: DB_NAME
          value: "stockdb"
        - name: DB_USER
          value: "stock"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_PORT
          value: "3306"
        ports:
        - containerPort: 8000

---

# Stock DB Service
apiVersion: v1
kind: Service
metadata:
  name: stock-service
spec:
  selector:
    app: stock
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: NodePort

---

# Stock DB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stock-db-statefulset
spec:
  serviceName: "db-service"
  replicas: 1
  selector:
    matchLabels:
      app: stock-db
  template:
    metadata:
      labels:
        app: stock-db
    spec:
      containers:
      - name: db-container
        image: mariadb #replace if you have a custom image
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: MYSQL_DATABASE
          value: "stockdb"
        - name: MYSQL_USER
          value: "stock"
        - name: MYSQL_PASSWORD
          value: "password"
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Mi

---

apiVersion: v1
kind: Service
metadata:
  name: stock-db-service
spec:
  ports:
  - port: 3306
  clusterIP: None
  selector:
    app: db

---




# Payment App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-app
  template:
    metadata:
      labels:
        app: payment-app
    spec:
      containers:
      - name: payment-app
        image: registry.deti:5000/egs-ressellr/payment:latest #replace with your payment application image
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 4000

---

# Payment App Service
apiVersion: v1
kind: Service
metadata:
  name: payment-app
spec:
  type: NodePort
  selector:
    app: payment-app
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 4000
      nodePort: 30001 # select an available port from 30000-32767

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: egs-ressellr
  annotations:
    kubernetes.io/ingress.class: "kong"
spec:
  rules:
  - host: ressellr.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: frontend
            port:
              number: 80
      - pathType: Prefix
        path: /authentication
        backend:
          service:
            name: authentication
            port:
              number: 5000
      - pathType: Prefix
        path: /messages
        backend:
          service:
            name: messages
            port:
              number: 3000
      - pathType: Prefix
        path: /stock
        backend:
          service:
            name: stock
            port:
              number: 8000
      - pathType: Prefix
        path: /payment
        backend:
          service:
            name: payment
            port:
              number: 4000

---
# KONG

# Frontend Service
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: frontend-route
  namespace: egs-ressellr
  annotations:
    plugins.konghq.com: oauth2-plugin
route:
  methods:
  - GET
  - POST
  strip_path: true
  protocols:
  - http
  - https

---

apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: frontend-service
  namespace: egs-ressellr
proxy:
  protocol: http
  path: /
route:
  name: frontend-route

---
# Frontend Route
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: frontend-route
  namespace: egs-ressellr
spec:
  methods:
  - GET
  - POST
  paths:
  - /
  strip_path: true
  protocols:
  - http
  - https
  service:
    name: frontend-service

---

# Authentication Service
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: authentication-route
  namespace: egs-ressellr
  annotations:
    plugins.konghq.com: oauth2-plugin
route:
  methods:
  - GET
  - POST
  strip_path: true
  protocols:
  - http
  - https

---
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: authentication-service
  namespace: egs-ressellr
proxy:
  protocol: http
  path: /authentication
route:
  name: authentication-route

---  
# Authentication Route
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: authentication-route
  namespace: egs-ressellr
spec:
  methods:
  - GET
  - POST
  paths:
  - /authentication
  strip_path: true
  protocols:
  - http
  - https
  service:
    name: authentication-service

---
# Messages Service
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: messages-route
  namespace: egs-ressellr
  annotations:
    plugins.konghq.com: oauth2-plugin
route:
  methods:
  - GET
  - POST
  strip_path: true
  protocols:
  - http
  - https

---
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: messages-service
  namespace: egs-ressellr
proxy:
  protocol: http
  path: /messages
route:
  name: messages-route

---
# Messages Route
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: messages-route
  namespace: egs-ressellr
spec:
  methods:
  - GET
  - POST
  paths:
  - /messages
  strip_path: true
  protocols:
  - http
  - https
  service:
    name: messages-service



---
# Stock Service
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: stock-route
  namespace: egs-ressellr
  annotations:
    plugins.konghq.com: oauth2-plugin
route:
  methods:
  - GET
  - POST
  strip_path: true
  protocols:
  - http
  - https

---
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: stock-service
  namespace: egs-ressellr
proxy:
  protocol: http
  path: /stock
route:
  name: stock-route

---
# Stock Route
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: stock-route
  namespace: egs-ressellr
spec:
  methods:
  - GET
  - POST
  paths:
  - /stock
  strip_path: true
  protocols:
  - http
  - https
  service:
    name: stock-service

---
# Payment Service
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: payment-route
  namespace: egs-ressellr
  annotations:
    plugins.konghq.com: oauth2-plugin
route:
  methods:
  - GET
  - POST
  strip_path: true
  protocols:
  - http
  - https

---
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: payment-service
  namespace: egs-ressellr
proxy:
  protocol: http
  path: /payment
route:
  name: payment-route

---
# Payment Route
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: payment-route
  namespace: egs-ressellr
spec:
  methods:
  - GET
  - POST
  paths:
  - /payment
  strip_path: true
  protocols:
  - http
  - https
  service:
    name: payment-service

---
# Kong Oauth2 Plugin
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: oauth2-plugin
  namespace: egs-ressellr
config:
  scopes:
  - read
  - write
  mandatory_scope: true
  token_expiration: 3600
  enable_password_grant: true
  provision_key: "your_provision_key_here"
plugin: oauth2

---
# Kong Consumer
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: my-consumer
  namespace: egs-ressellr
username: my-consumer

---
# Kong Credential
apiVersion: configuration.konghq.com/v1
kind: KongCredential
metadata:
  name: my-oauth2-credential
  namespace: egs-ressellr
consumerRef: my-consumer
type: oauth2
config:
  client_id: my-client-id
  client_secret: my-client-secret
  redirect_uris:
  - http://ressellr.com/oauth2/callback

# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-k3s
  namespace: egs-ressellr
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: app-ressellr.k3s
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port: 
              number: 80