<!DOCTYPE html>
<head>
  <title>Messages</title>
  <script src="https://js.pusher.com/7.2/pusher.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body>

  <div class="container py-5 px-4">
  
    <div class="row rounded-lg overflow-hidden shadow">
      <!-- Users box-->
      <div class="col-5 px-0">
        <div class="bg-white">
  
          <div class="bg-gray px-4 py-2 bg-light">
            <p class="h5 mb-0 py-1">Recent</p>
          </div>
  
          <div class="messages-box">
            <div class="list-group rounded-0">
              
              <% Object.keys(filteredConvTable).forEach(function(key) { %>
                <% if (conversationId == key) { %>
                  <a href="/messages/<%=key%>" class="list-group-item list-group-item-action active text-white rounded-0">
                    <div class="media"><img src="https://bootstrapious.com/i/snippets/sn-chat/avatar.svg" alt="user" width="50" class="rounded-circle">
                      <div class="media-body ml-4">
                        <div class="d-flex align-items-center justify-content-between mb-1">
                          <h6 class="mb-0"><%=filteredConvTable[key]["otherUserName"]%></h6>
                            <% if (conversationId != -1) { %>
                              <div class="col-6 pr-0">
                                <form method="DELETE" id="delete-conv" class="bg-light">
                                  <div class="input-group">
                                    <div class="input-group-append" style="padding-left: 120px">
                                      <button id="button-addon2" type="submit" value="Delete" style="width: 25%;" class="btn btn-danger btn-block rounded-0 position-absolute top-0 right-0">X</button>
                                    </div>
                                  </div>
                                </form>
                              </div>
                            <% } %>
                        </div>
                        <p class="font-italic mb-0 text-small">Lorem ipsum dolor sit amet, consectetur. incididunt ut labore.</p>
                      </div>
                    </div>
                  </a>
                <% } else { %>
                  <a href="/messages/<%=key%>" class="list-group-item list-group-item-action list-group-item-light rounded-0">
                    <div class="media"><img src="https://bootstrapious.com/i/snippets/sn-chat/avatar.svg" alt="user" width="50" class="rounded-circle">
                      <div class="media-body ml-4">
                        <div class="d-flex align-items-center justify-content-between mb-1">
                          <h6 class="mb-0"><%=filteredConvTable[key]["otherUserName"]%></h6>
                        </div>
                        <p class="font-italic text-muted mb-0 text-small">Lorem ipsum dolor sit amet, consectetur. incididunt ut labore.</p>
                      </div>
                    </div>
                  </a>
                <% } %>
              <% }); %>
  
            </div>
          </div>
        </div>
      </div>
      <% if (conversationId != -1) { %>
      <!-- Chat Box-->
      <div class="col-7 px-0">
        <input type="hidden" id="userid" value=<%=currentUserId%>></input>
        <div id="chatbox" class="px-4 py-5 chat-box bg-white overflow-auto" style="margin-top: 46px; height: calc(400px - 46px);" value=<%=conversationId%>>
            <% Object.keys(filteredMsgTable).forEach(function(key) { %>
              <% if (filteredMsgTable[key]["senderId"] == currentUserId) { %>
                <div class="media w-50 ml-auto mb-3">
                  <div class="media-body">
                    <div class="bg-primary rounded py-2 px-3 mb-2">
                      <p class="text-small mb-0 text-white"><%= filteredMsgTable[key]["content"] %></p>
                    </div>
                    <p class="small text-muted"><%= filteredMsgTable[key]["timestamp"].toLocaleString([], { day: 'numeric', month: 'short', hour: 'numeric', minute: 'numeric', second: 'numeric' }) %></p>
                  </div>
                </div>
              <% } else { %>
                <div class="media w-50 mb-3"><img src="https://bootstrapious.com/i/snippets/sn-chat/avatar.svg" alt="user" width="50" class="rounded-circle">
                  <div class="media-body ml-3">
                    <div class="bg-light rounded py-2 px-3 mb-2">
                      <p class="text-small mb-0 text-muted"></p>
                    </div>
                    <p class="small text-muted"><%= filteredMsgTable[key]["content"] %></p>
                  </div>
                </div>
              <% } %>              
            <% }); %>
        </div>
  
        <!-- Typing area -->
        <form id="message-form" class="bg-light">
          <div class="input-group">
            <input type="text" id="message-input" placeholder="Type a message" aria-describedby="button-addon2" class="form-control rounded-0 border-0 py-4 bg-light">
            <div class="input-group-append">
              <button id="button-addon2" type="submit" class="btn btn-link"> <i class="fa fa-paper-plane"></i></button>
            </div>
          </div>
        </form>
  
      </div>
      <% } %>
    </div>
  </div>

  <!--<% if (conversationId == -1) { %>
    <div class="col-7 px-0">
      <div class="text-right mt-3">
        <form method="POST" id="new-conv" class="bg-light d-inline-block">
          <button id="button-addon2" type="submit" class="btn btn-primary rounded-pill">NEW CONVERSATION</button>
        </form>
      </div>
    </div>
  <% } %>  -->

  <script>
    // ------------------------------------
    // this script is listening to the pusher channel to update the interface with the message contents
    // ------------------------------------

    // Enable pusher logging
    Pusher.logToConsole = true;

    var pusher = new Pusher('0274fca38b4154a8b349', {
      cluster: 'eu',
    });

    var convId = document.getElementById('chatbox').getAttribute("value");
    var channelName = 'chat' + convId;
    var channel = pusher.subscribe(channelName);

    var userId = document.getElementById('userid').getAttribute("value");

    channel.bind('message', function(data) {
      // Update the UI with the new message

      const message = data.msg;

      const user = data.userId;

      // Get the chat window element
      const chatWindow = document.getElementById('chatbox');

      var messageElement;
      if(user == userId){
        messageElement = receiverMessage(message);
      }
      else{
        messageElement = senderMessage(message);
      }

      // Append the message element to the chat window
      chatWindow.appendChild(messageElement);

      // Scroll to the bottom of the chat window
      chatWindow.scrollTop = chatWindow.scrollHeight;
    });
      
    // ------------------------------------
    //this script is listening to the form and posts to /messages without the need for page reloading
    // ------------------------------------

    const form = document.getElementById('message-form');
    const chatbox = document.getElementById('chatbox');

    form.addEventListener('submit', (event) => {
      event.preventDefault();

      const messageInput = document.getElementById('message-input');
      const message = messageInput.value;

      if(message != ''){
        // Send a POST request to the server with the message data
        var convId = document.getElementById('chatbox').getAttribute("value");
        var path = '/messages/' + convId;
        fetch(path, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            message: message
          })
        })
        .then(response => {
          if (response.ok) {
            console.log('Message sent successfully');
          } else {
            console.error('Error sending message');
          }
        })
        .catch(error => {
          console.error('Error sending message', error);
        });
      }

      // Clear the message input field
      messageInput.value = '';
    });

    // ------------------------------------
    //this script is listening to the delete form and posts to /messages/id without the need for page reloading
    // ------------------------------------

    const deleteForm = document.getElementById('delete-conv');
    deleteForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const url = deleteForm.getAttribute('action');
      fetch(url, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({conversationId: convId})
      })
      .then(response => {
        if(response.ok) {
          console.log('Delete request successful');
        } else {
          console.log('Delete request failed');
        }
        window.location.href = '/messages';
      })
      .catch(error => {
        console.log('Error:', error);
      });
    });

    // create a receiver message HTML element
    function receiverMessage(msg){
      // create the outer div element
      const messageElement = document.createElement('div');
      messageElement.classList.add('media', 'w-50', 'ml-auto', 'mb-3');

      // create the first inner div element
      const innerDiv1 = document.createElement('div');
      innerDiv1.classList.add('media-body');

      // create the second inner div element
      const innerDiv2 = document.createElement('div');
      innerDiv2.classList.add('bg-primary', 'rounded', 'py-2', 'px-3', 'mb-2');

      // create the paragraph element inside the second inner div
      const pElement = document.createElement('p');
      pElement.classList.add('text-small', 'mb-0', 'text-white');
      pElement.textContent = msg;

      // append the paragraph element to the second inner div
      innerDiv2.appendChild(pElement);

      const currentTime = new Date();
  
      // format the timestamp
      const timestamp = currentTime.toLocaleString([], { day: 'numeric', month: 'short', hour: 'numeric', minute: 'numeric', second: 'numeric' });

      // create the second paragraph element inside the media-body div
      const pElement2 = document.createElement('p');
      pElement2.classList.add('small', 'text-muted');
      pElement2.textContent = timestamp

      // append the second inner div and the second paragraph element to the media-body div
      innerDiv1.appendChild(innerDiv2);
      innerDiv1.appendChild(pElement2);

      // append the media-body div to the outer div
      messageElement.appendChild(innerDiv1);

      return messageElement;
    }

    // create a sender message HTML element
    function senderMessage(msg){
      // create the outer div element
      const messageElement = document.createElement('div');
      messageElement.classList.add('media', 'w-50', 'mb-3');

      // create the image element
      let img = document.createElement("img");
      img.src = "https://bootstrapious.com/i/snippets/sn-chat/avatar.svg";
      img.alt = "user";
      img.width = "50";
      img.classList.add("rounded-circle");

      // create the first inner div element
      const innerDiv1 = document.createElement('div');
      innerDiv1.classList.add('media-body', 'ml-3');

      // create the second inner div element
      const innerDiv2 = document.createElement('div');
      innerDiv2.classList.add('bg-light', 'rounded', 'py-2', 'px-3', 'mb-2');

      // create the paragraph element inside the second inner div
      const pElement1 = document.createElement('p');
      pElement1.classList.add('text-small', 'mb-0', 'text-muted');

      // append the paragraph element to the second inner div
      innerDiv2.appendChild(pElement1);

      // create the paragraph element inside the first inner div
      // create the paragraph element inside the second inner div
      const pElement2 = document.createElement('p');
      pElement2.classList.add('small', 'text-muted');
      pElement2.textContent = msg;

      // append the second inner div and the second paragraph element to the media-body div
      innerDiv1.appendChild(innerDiv2);
      innerDiv1.appendChild(pElement2)

      // append the media-body div to the outer div
      messageElement.appendChild(img);
      messageElement.appendChild(innerDiv1);

      return messageElement;
    }
  </script>
</body>
