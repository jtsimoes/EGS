# Frontend Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-db
  labels:
    app: frontend-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-db
  template:
    metadata:
      labels:
        app: frontend-db
    spec:
      containers:
      - name: frontend-db
        image: mariadb
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: MYSQL_DATABASE
          value: frontenddb
        - name: MYSQL_USER
          value: frontend
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mysql-pvc
---
# Frontend Database Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-db
spec:
  selector:
    app: frontend-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi

---
# Messages DB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messages-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messages-db
  template:
    metadata:
      labels:
        app: messages-db
    spec:
      containers:
      - name: messages-db
        image: mariadb:10.7
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: MYSQL_DATABASE
          value: 'ResellrMessages'
        - name: MYSQL_USER
          value: 'user'
        - name: MYSQL_PASSWORD
          value: 'password'
        - name: MYSQL_ROOT_PASSWORD
          value: 'root'
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: messages-db-storage
      volumes:
      - name: messages-db-storage
        persistentVolumeClaim:
          claimName: messages-db-pv-claim

---

# Messages DB Service
apiVersion: v1
kind: Service
metadata:
  name: messages-db
spec:
  selector:
    app: messages-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: messages-db-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Mi # adjust based on your needs
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data" # this path must be valid in your host machine

---

# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: messages-db-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi # adjust based on your needs

---

# Stock DB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stock
  template:
    metadata:
      labels:
        app: stock
    spec:
      containers:
      - name: app-container
        image: registry.deti:5000/egs-Ressellr/messages:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: DB_HOST
          value: "db-service"
        - name: DB_NAME
          value: "stockdb"
        - name: DB_USER
          value: "stock"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_PORT
          value: "3306"
        ports:
        - containerPort: 8000

---

# Stock DB Service
apiVersion: v1
kind: Service
metadata:
  name: stock-service
spec:
  selector:
    app: stock
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: NodePort

---

# Stock DB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stock-db-statefulset
spec:
  serviceName: "db-service"
  replicas: 1
  selector:
    matchLabels:
      app: stock-db
  template:
    metadata:
      labels:
        app: stock-db
    spec:
      containers:
      - name: db-container
        image: mariadb 
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: MYSQL_DATABASE
          value: "stockdb"
        - name: MYSQL_USER
          value: "stock"
        - name: MYSQL_PASSWORD
          value: "password"
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Mi

---

apiVersion: v1
kind: Service
metadata:
  name: stock-db-service
spec:
  ports:
  - port: 3306
  clusterIP: None
  selector:
    app: db